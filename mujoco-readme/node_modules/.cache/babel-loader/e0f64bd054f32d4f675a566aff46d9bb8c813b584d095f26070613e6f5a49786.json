{"ast":null,"code":"var _jsxFileName = \"/home/dev/mujoco/mujoco-readme/src/components/GettingStarted.js\";\nimport React from 'react';\nimport Section from './Section';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GettingStarted = () => /*#__PURE__*/_jsxDEV(Section, {\n  id: \"getting-started\",\n  title: \"Getting Started\",\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body1\",\n    children: \"There are two easy ways to get started with MuJoCo:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Run simulate on your machine. This video shows a screen capture of simulate, MuJoCo's native interactive viewer. Follow the steps described in the Getting Started section of the documentation to get simulate running on your machine.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Explore our online IPython notebooks. If you are a Python user, you might want to start with our tutorial notebooks running on Google Colab:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"The introductory tutorial teaches MuJoCo basics: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://colab.research.google.com\",\n              children: \"Open In Colab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"The LQR tutorial synthesizes a linear-quadratic controller, balancing a humanoid on one leg: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://colab.research.google.com\",\n              children: \"Open In Colab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 108\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"The least-squares tutorial explains how to use the Python-based nonlinear least-squares solver: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://colab.research.google.com\",\n              children: \"Open In Colab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 111\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"The MJX tutorial provides usage examples of MuJoCo XLA, a branch of MuJoCo written in JAX: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://colab.research.google.com\",\n              children: \"Open In Colab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 106\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"The differentiable physics tutorial trains locomotion policies with analytical gradients automatically derived from MuJoCo's physics step: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://colab.research.google.com\",\n              children: \"Open In Colab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 154\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = GettingStarted;\nexport default GettingStarted;\nvar _c;\n$RefreshReg$(_c, \"GettingStarted\");","map":{"version":3,"names":["React","Section","Typography","jsxDEV","_jsxDEV","GettingStarted","id","title","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/home/dev/mujoco/mujoco-readme/src/components/GettingStarted.js"],"sourcesContent":["import React from 'react';\nimport Section from './Section';\nimport { Typography } from '@mui/material';\n\nconst GettingStarted = () => (\n  <Section id=\"getting-started\" title=\"Getting Started\">\n    <Typography variant=\"body1\">There are two easy ways to get started with MuJoCo:</Typography>\n    <ul>\n      <li>\n        <Typography variant=\"body1\">\n          Run simulate on your machine. This video shows a screen capture of simulate, MuJoCo's native interactive viewer. \n          Follow the steps described in the Getting Started section of the documentation to get simulate running on your machine.\n        </Typography>\n      </li>\n      <li>\n        <Typography variant=\"body1\">\n          Explore our online IPython notebooks. If you are a Python user, you might want to start with our tutorial notebooks running on Google Colab:\n        </Typography>\n        <ul>\n          <li>\n            <Typography variant=\"body1\">\n              The introductory tutorial teaches MuJoCo basics: <a href=\"https://colab.research.google.com\">Open In Colab</a>\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"body1\">\n              The LQR tutorial synthesizes a linear-quadratic controller, balancing a humanoid on one leg: <a href=\"https://colab.research.google.com\">Open In Colab</a>\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"body1\">\n              The least-squares tutorial explains how to use the Python-based nonlinear least-squares solver: <a href=\"https://colab.research.google.com\">Open In Colab</a>\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"body1\">\n              The MJX tutorial provides usage examples of MuJoCo XLA, a branch of MuJoCo written in JAX: <a href=\"https://colab.research.google.com\">Open In Colab</a>\n            </Typography>\n          </li>\n          <li>\n            <Typography variant=\"body1\">\n              The differentiable physics tutorial trains locomotion policies with analytical gradients automatically derived from MuJoCo's physics step: <a href=\"https://colab.research.google.com\">Open In Colab</a>\n            </Typography>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </Section>\n);\n\nexport default GettingStarted;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}